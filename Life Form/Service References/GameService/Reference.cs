//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Life_Form.GameService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.ILifeService")]
    public interface ILifeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/Game1New", ReplyAction="http://tempuri.org/ILifeService/Game1NewResponse")]
        Life.Gaming.Game1 Game1New(Life.Initialization.Options options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/Game1New", ReplyAction="http://tempuri.org/ILifeService/Game1NewResponse")]
        System.Threading.Tasks.Task<Life.Gaming.Game1> Game1NewAsync(Life.Initialization.Options options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/Game2New", ReplyAction="http://tempuri.org/ILifeService/Game2NewResponse")]
        Life.Gaming.Game2 Game2New(Life.Initialization.Options options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/Game2New", ReplyAction="http://tempuri.org/ILifeService/Game2NewResponse")]
        System.Threading.Tasks.Task<Life.Gaming.Game2> Game2NewAsync(Life.Initialization.Options options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/Game3New", ReplyAction="http://tempuri.org/ILifeService/Game3NewResponse")]
        Life.Gaming.Game3 Game3New(Life.Initialization.Options options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/Game3New", ReplyAction="http://tempuri.org/ILifeService/Game3NewResponse")]
        System.Threading.Tasks.Task<Life.Gaming.Game3> Game3NewAsync(Life.Initialization.Options options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/Game4New", ReplyAction="http://tempuri.org/ILifeService/Game4NewResponse")]
        Life.Gaming.Game4 Game4New(Life.Initialization.Options options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/Game4New", ReplyAction="http://tempuri.org/ILifeService/Game4NewResponse")]
        System.Threading.Tasks.Task<Life.Gaming.Game4> Game4NewAsync(Life.Initialization.Options options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/RunSave", ReplyAction="http://tempuri.org/ILifeService/RunSaveResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game2))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game3))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game4))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game1))]
        void RunSave(Life.Initialization.Options options, int id, int iteration, Life.Gaming.GameBase igame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/RunSave", ReplyAction="http://tempuri.org/ILifeService/RunSaveResponse")]
        System.Threading.Tasks.Task RunSaveAsync(Life.Initialization.Options options, int id, int iteration, Life.Gaming.GameBase igame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/RunNew", ReplyAction="http://tempuri.org/ILifeService/RunNewResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game2))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game3))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game4))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game1))]
        void RunNew(Life.Gaming.GameBase igame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/RunNew", ReplyAction="http://tempuri.org/ILifeService/RunNewResponse")]
        System.Threading.Tasks.Task RunNewAsync(Life.Gaming.GameBase igame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/End", ReplyAction="http://tempuri.org/ILifeService/EndResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game2))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game3))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game4))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game1))]
        void End(Life.Gaming.GameBase igame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/End", ReplyAction="http://tempuri.org/ILifeService/EndResponse")]
        System.Threading.Tasks.Task EndAsync(Life.Gaming.GameBase igame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/IsData", ReplyAction="http://tempuri.org/ILifeService/IsDataResponse")]
        void IsData(bool[] boolMenu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/IsData", ReplyAction="http://tempuri.org/ILifeService/IsDataResponse")]
        System.Threading.Tasks.Task IsDataAsync(bool[] boolMenu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/Step", ReplyAction="http://tempuri.org/ILifeService/StepResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game2))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game3))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game4))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Life.Gaming.Game1))]
        bool Step(Life.Gaming.GameBase igame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/Step", ReplyAction="http://tempuri.org/ILifeService/StepResponse")]
        System.Threading.Tasks.Task<bool> StepAsync(Life.Gaming.GameBase igame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/Remove", ReplyAction="http://tempuri.org/ILifeService/RemoveResponse")]
        void Remove(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILifeService/Remove", ReplyAction="http://tempuri.org/ILifeService/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILifeServiceChannel : Life_Form.GameService.ILifeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LifeServiceClient : System.ServiceModel.ClientBase<Life_Form.GameService.ILifeService>, Life_Form.GameService.ILifeService {
        
        public LifeServiceClient() {
        }
        
        public LifeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LifeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LifeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LifeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Life.Gaming.Game1 Game1New(Life.Initialization.Options options) {
            return base.Channel.Game1New(options);
        }
        
        public System.Threading.Tasks.Task<Life.Gaming.Game1> Game1NewAsync(Life.Initialization.Options options) {
            return base.Channel.Game1NewAsync(options);
        }
        
        public Life.Gaming.Game2 Game2New(Life.Initialization.Options options) {
            return base.Channel.Game2New(options);
        }
        
        public System.Threading.Tasks.Task<Life.Gaming.Game2> Game2NewAsync(Life.Initialization.Options options) {
            return base.Channel.Game2NewAsync(options);
        }
        
        public Life.Gaming.Game3 Game3New(Life.Initialization.Options options) {
            return base.Channel.Game3New(options);
        }
        
        public System.Threading.Tasks.Task<Life.Gaming.Game3> Game3NewAsync(Life.Initialization.Options options) {
            return base.Channel.Game3NewAsync(options);
        }
        
        public Life.Gaming.Game4 Game4New(Life.Initialization.Options options) {
            return base.Channel.Game4New(options);
        }
        
        public System.Threading.Tasks.Task<Life.Gaming.Game4> Game4NewAsync(Life.Initialization.Options options) {
            return base.Channel.Game4NewAsync(options);
        }
        
        public void RunSave(Life.Initialization.Options options, int id, int iteration, Life.Gaming.GameBase igame) {
            base.Channel.RunSave(options, id, iteration, igame);
        }
        
        public System.Threading.Tasks.Task RunSaveAsync(Life.Initialization.Options options, int id, int iteration, Life.Gaming.GameBase igame) {
            return base.Channel.RunSaveAsync(options, id, iteration, igame);
        }
        
        public void RunNew(Life.Gaming.GameBase igame) {
            base.Channel.RunNew(igame);
        }
        
        public System.Threading.Tasks.Task RunNewAsync(Life.Gaming.GameBase igame) {
            return base.Channel.RunNewAsync(igame);
        }
        
        public void End(Life.Gaming.GameBase igame) {
            base.Channel.End(igame);
        }
        
        public System.Threading.Tasks.Task EndAsync(Life.Gaming.GameBase igame) {
            return base.Channel.EndAsync(igame);
        }
        
        public void IsData(bool[] boolMenu) {
            base.Channel.IsData(boolMenu);
        }
        
        public System.Threading.Tasks.Task IsDataAsync(bool[] boolMenu) {
            return base.Channel.IsDataAsync(boolMenu);
        }
        
        public bool Step(Life.Gaming.GameBase igame) {
            return base.Channel.Step(igame);
        }
        
        public System.Threading.Tasks.Task<bool> StepAsync(Life.Gaming.GameBase igame) {
            return base.Channel.StepAsync(igame);
        }
        
        public void Remove(int id) {
            base.Channel.Remove(id);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(int id) {
            return base.Channel.RemoveAsync(id);
        }
    }
}
